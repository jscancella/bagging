plugins {
  id 'java'
  
  //these have to be in the main project for now see:
  //https://discuss.gradle.org/t/how-do-i-include-buildscript-block-from-external-gradle-script/7016/2
  id "com.github.nbaztec.coveralls-jacoco" version "1.2.14" 
  id "de.aaschmid.cpd" version "3.3"
  id "org.owasp.dependencycheck" version "7.2.1"
  id "org.ajoberstar.grgit" version "5.0.0"
  id "com.github.spotbugs" version "5.0.12"
  id 'info.solidsoft.pitest' version '1.9.0'
  id "com.github.ben-manes.versions" version "0.42.0"
  id "com.dorongold.task-tree" version "2.1.0"
}
apply from: 'eclipse.gradle'
apply from: 'maven-central.gradle'
apply from: 'code-quality.gradle'
apply from: 'message-bundle.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

project.group = "com.github.jscancella"

if(project.version == "unspecified"){
  String now = new Date().format( 'MMM-dd-yyyy_HH-mm-ss' )
  project.version = "1.0.0-${now}-SNAPSHOT"
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.slf4j:slf4j-api:2.0.3'
  implementation 'com.fasterxml.jackson.core:jackson-core:2.13.4'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
    
  testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
  testImplementation 'org.springframework.boot:spring-boot-starter-logging:2.7.4'
  testImplementation 'org.bouncycastle:bcprov-jdk15on:1.70'
  testImplementation 'org.kamranzafar:jtar:2.3'
}

test { 
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
  reports {
    html.required = true
  }
  //testLogging.showStandardStreams = true
}

import org.ajoberstar.grgit.*
task cloneConformanceSuite(){
  group "Verification"
  description "Download the bagit-conformance-suite if it doesn't exist."
  File location = file("${project.projectDir}/bagit-conformance-suite")
  outputs.dir(location)
  
  onlyIf { !location.exists() }
  doLast{
      Grgit.clone(dir: location, 
                  uri: 'https://github.com/libraryofcongress/bagit-conformance-suite.git')
    }
}

task updateConformanceSuite(){
  group "Verification"
  description "Update the bagit-conformance-suite if needed."
  File location = file("${project.projectDir}/bagit-conformance-suite")
  outputs.dir(location)
  
  onlyIf { location.exists() }
  doLast{
      Grgit grgit = Grgit.open(dir: location)
      grgit.pull()
    }
}
